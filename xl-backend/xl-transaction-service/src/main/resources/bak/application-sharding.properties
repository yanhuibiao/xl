#spring.main.allow-bean-definition-overriding=true
spring.autoconfigure.exclude=com.alibaba.druid.spring.boot3.autoconfigure.DruidDataSourceAutoConfigure
# druid
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.pool-prepared-statements=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=-1
spring.datasource.druid.use-global-data-source-stat=true
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.druid.filters=stat,wall,slf4j
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=/druid/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.reset-enable=true
spring.datasource.druid.stat-view-servlet.login-username=druid
spring.datasource.druid.stat-view-servlet.login-password=druid
#spring.datasource.druid.stat-view-servlet.allow=

spring.shardingsphere.datasource.names=ds_master_0,ds_master_1,ds_slave_0,ds_slave_1

spring.shardingsphere.datasource.dsMaster0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.dsMaster0.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.dsMaster0.jdbc-url=jdbc:mysql://192.168.224.128:3306/xl_transaction_0
# druid user url
spring.shardingsphere.datasource.ds_master_0.url=jdbc:mysql://192.168.224.128:3306/xl_transaction_0
spring.shardingsphere.datasource.ds_master_0.username=root
spring.shardingsphere.datasource.ds_master_0.password=root
spring.shardingsphere.datasource.ds_master_0.initialSize=5
spring.shardingsphere.datasource.ds_master_0.minIdle=5
spring.shardingsphere.datasource.ds_master_0.maxActive=20
spring.shardingsphere.datasource.ds_master_0.maxWait=60000

spring.shardingsphere.datasource.ds_master_1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds_master_1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds_master_1.url=jdbc:mysql://192.168.224.128:3306/xl_transaction_1
spring.shardingsphere.datasource.ds_master_1.username=root
spring.shardingsphere.datasource.ds_master_1.password=root

spring.shardingsphere.datasource.ds_slave_0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds_slave_0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds_slave_0.url=jdbc:mysql://192.168.224.128:3307/xl_transaction_0
spring.shardingsphere.datasource.ds_slave_0.username=root
spring.shardingsphere.datasource.ds_slave_0.password=root

spring.shardingsphere.datasource.ds_slave_1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds_slave_1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds_slave_1.url=jdbc:mysql://192.168.224.128:3307/xl_transaction_1
spring.shardingsphere.datasource.ds_slave_1.username=root
spring.shardingsphere.datasource.ds_slave_1.password=root
# Table sharding rules
spring.shardingsphere.rules.sharding.tables.trade_order.actual-data-nodes=xl_transaction_$->{0..1}.trade_order$->{0..1}
spring.shardingsphere.rules.sharding.tables.trade_order.table-strategy.standard.sharding-column=payer_id
spring.shardingsphere.rules.sharding.tables.trade_order.table-strategy.standard.sharding-algorithm-name=trade_order_table_inline

spring.shardingsphere.rules.sharding.tables.trade_entry.actual-data-nodes=xl_transaction_${0..1}.trade_entry${0..1}
spring.shardingsphere.rules.sharding.tables.trade_entry.table-strategy.standard.sharding-column=account_no
spring.shardingsphere.rules.sharding.tables.trade_entry.table-strategy.standard.sharding-algorithm-name=trade_entry_table-inline
# Database Sharding rules
spring.shardingsphere.rules.sharding.tables.trade_order.database-strategy.standard.sharding-column=payer_id
spring.shardingsphere.rules.sharding.tables.trade_order.database-strategy.standard.sharding-algorithm-name=trade_order_database_inline

spring.shardingsphere.rules.sharding.tables.trade_entry.database-strategy.standard.sharding-column=account_no
spring.shardingsphere.rules.sharding.tables.trade_entry.database-strategy.standard.sharding-algorithm-name=trade_order_table_inline
# Sharding algorithm
spring.shardingsphere.rules.sharding.sharding-algorithms.trade_order_database_inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.trade_order_database_inline.props.algorithm-expression=xl_transaction_${payer_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.trade_order_table_inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.trade_order_table_inline.props.algorithm-expression=trade_order_${payer_id % 2}

spring.shardingsphere.rules.sharding.sharding-algorithms.trade_entry_database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.trade_entry_database-inline.props.algorithm-expression=xl_transaction_${account_no % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.trade_entry_table-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.trade_entry_table-inline.props.algorithm-expression=trade_entry_${account_no % 2}
# Read-write separation
spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_master_0.static-strategy.write-data-source-name=ds_master_0
spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_master_0.static-strategy.read-data-source-names=ds_slave_0
spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_master_0.load-balancer-name=round_robin
spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_master_1.static-strategy.write-data-source-name=ds_master_1
spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_master_1.static-strategy.read-data-source-names=ds_slave_1
spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_master_1.load-balancer-name=round_robin
# load-balancers
spring.shardingsphere.rules.readwrite-splitting.load-balancers.round_robin.type=ROUND_ROBIN
# Show SQL
spring.shardingsphere.props.sql-show=true
# Close primary key backfill
spring.shardingsphere.props.sql-simple=true