xl:
  db: /xl_users
server:
  port: 18081
  servlet:
    context-path: /ib
spring:
  application:
    name: xl-identitybusiness # 服务名称
  config:
    import:
      - classpath:application-common.yml  # 导入common模块yml的配置
      - optional:nacos:xl-identitybusiness.yaml?group=DEFAULT_GROUP&refreshEnabled=true
  cloud:
    nacos:
      server-addr: 192.168.224.128:8848 # 注册Nacos地址，其他服务可以发现自己
      username: nacos
      password: nacos
      config:
        server-addr: 192.168.224.128:8848  # 读取Nacos配置的地址，可忽略
        username: ${spring.cloud.nacos.username}
        password: ${spring.cloud.nacos.password}
      #      # file-extension: yaml # 配置文件后缀名 这里会从${spring.application.name}-${spring.profiles.active}.${spring.cloud.nacos.config.file-extension}`作为文件id，来读取配置。
      discovery:  #从nacos中心查找其他服务
        cluster-name: public  # 集群名称
        namespace: # 命名空间，填ID  c175d688-72cb-4c61-8400-7f50c29346e0
dubbo:
  protocol:
    name: dubbo
    port: 20881
  registry:
    address: nacos://192.168.224.128:8848?namespace=public&group=DUBBO_GROUP&username=nacos&password=nacos    # dubbo注册地址，其他服务可以发现自己,dubbo只需注册无需发现
    use-as-metadata-center: false #关闭dubbo自己在nacos创建配置
    cluster:
  scan:
    base-packages: com.xl.identitybusiness.service
  consumer:
    check: false  #启动检查
    timeout: 3000   #超时时间
    retries: 3    #重试次数
  application:   #Qos=Quality of Service，qos是Dubbo的在线运维命令，可以对服务进行动态的配置、控制及查询
    qos-enable: false    #是否启动QoS
    serialize-check-status: WARN
    name: ${spring.application.name}-dubbo  #dubbo在nacos注册的服务，不设置会和spring.application.name一样，导致一个服务有两个实例
#    check-serializable: false
#    qos-port: 22224    #启动QoS绑定的端口
#    qos-accept-foreign-ip: false    #是否允许远程访问
#  provider:  # 重写dubbo ExceptionFilter并生效
#    filter: customExceptionFilter,-exception
mybatis-plus:
  mapper-locations: classpath:com/xl/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
jwt:
  secret: xlbb
  expiration: 31
