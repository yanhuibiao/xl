name: Docker Setup and Component Installation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-and-install:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Docker and JDK on CentOS 7
      run: |
        sudo yum update -y
        sudo yum install -y yum-utils
        sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
        # 检查并安装 Docker
        if ! command -v docker &> /dev/null
        then
          echo "Docker 未安装，开始安装..."
          sudo yum install -y docker-ce docker-ce-cli containerd.io
          sudo systemctl start docker
          sudo systemctl enable docker
        else
          echo "Docker 已安装"
        fi
        # 检查并安装 JDK 17
        if ! java -version 2>&1 | grep "17" &> /dev/null
        then
          echo "JDK 17 未安装，开始安装..."
          sudo yum install -y java-17-openjdk
        else
          echo "JDK 17 已安装"
        fi

    - name: Pull and Run MySQL
      run: |
        docker pull mysql:8.0
        docker run --name mysql -e MYSQL_ROOT_PASSWORD=root -d -p 3306:3306 mysql:8.0
        sleep 30 # Wait for MySQL to initialize

    - name: Initialize Database
      run: |
        docker exec -i mysql mysql -uroot -proot <<EOF
        $(cat xl-backend/xl-deploy/src/main/resources/ddl/ddl_users.sql)
        $(cat xl-backend/xl-deploy/src/main/resources/ddl/ddl_transactions.sql)
        $(cat xl-backend/xl-deploy/src/main/resources/ddl/ddl_products.sql)
        $(cat xl-backend/xl-deploy/src/main/resources/ddl/ddl_orders.sql)
        $(cat xl-backend/xl-deploy/src/main/resources/ddl/ddl_risk_checks.sql)
        $(cat xl-backend/xl-deploy/src/main/resources/ddl/ddl_notifications.sql)
        EOF

    - name: Pull and Run Redis
      run: |
        docker pull redis:latest
        docker run --name redis -d -p 6379:6379 redis:latest

    - name: Pull and Run RabbitMQ
      run: |
        docker pull rabbitmq:3-management
        docker run --name rabbitmq -d -p 5672:5672 -p 15672:15672 rabbitmq:3-management

    - name: Pull and Run Nginx
      run: |
        docker pull nginx:latest
        docker run --name nginx -d -p 80:80 nginx:latest

    # Add more components as needed 