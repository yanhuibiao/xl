server:
  port: 18080
spring:
  application:
    name: xl-gateway
  config:
    import:
      - optional:nacos:xl-gateway.yaml?group=DEFAULT_GROUP&refreshEnabled=true  # 从nacos导入配置，配置热更新
  rabbitmq:
    host: 192.168.224.128
    port: 5672
    username: admin
    password: admin
    virtual-host: /
    # 连接池配置
    connection-timeout: 5000
    cache:
      channel:
        size: 50
        checkout-timeout: 1000
      connection:
        mode: CONNECTION
        size: 5
    # 生产者配置
    publisher-confirm-type: correlated  # 发送方确认模式
    publisher-returns: true             # 开启返回机制
    template:
      mandatory: true                   # 消息不可达时返回给生产者
      retry:
        enabled: true                   # 发送失败时重试
        initial-interval: 1000         # 初始间隔(ms)
        max-interval: 10000             # 最大间隔(ms)
        multiplier: 2.0                # 间隔乘数
        max-attempts: 3                 # 最大重试次数
    # 消费者配置
    listener:
      type: simple                     # 监听器类型
      simple:
        acknowledge-mode: manual        # 开启消费者确认，手动确认
        concurrency: 5                 # 最小消费者数量
        max-concurrency: 10            # 最大消费者数量
        prefetch: 50                   # 每个消费者最大预取消息数
        retry:
          enabled: true                # 消费失败重试
          max-attempts: 3              # 消费最大重试次数
          initial-interval: 1000       # 初始间隔(ms)
          max-interval: 10000          # 最大间隔(ms)
          multiplier: 2.0              # 间隔乘数
        default-requeue-rejected: true # 被拒绝的消息是否重新放回队列。默认值为 true
  cloud:
    nacos:
      server-addr: 192.168.224.128:8848
      username: nacos
      password: nacos
      config:
        server-addr: 192.168.224.128:8848
      discovery:
        cluster-name: default
        namespace:
    gateway:  #gateway
      globalcors:  #全局跨域处理
        add-to-simple-url-handler-mapping: true  #解决options请求（浏览器询问服务器是否可以跨域的请求）被拦截的问题
        corsConfigurations:
          '[/**]':  #拦截一切请求
            allowedHeaders: "*" #允许在请求头中携带的头部信息
#            allowedOriginPatterns: "*"
            allowedOrigins:  #允许哪些网站的跨域请求，"*"表示所有网站
              - "http://localhost:8080"
              - "http://127.0.0.1:8080"
            allowedMethods:  #允许跨ajax的请求方式
              - GET
              - POST
              - DELETE
              - PUT
              - OPTION
            allowCredentials: true  #是否允许携带cookie
            maxAge: 360000  #有效期内，浏览器不再发起询问是否可以跨域请求，直接放行，避免每次都发起询问损耗性能
      routes:  # 网关路由配置
        - id: identitybusiness  #路由ID，自定义，唯一即可
          uri: lb://xl-identitybusiness  #lb-负载均衡，后面跟服务名称
          predicates:  #路由断言，判断请求是否符合路由规则
            - Path=/api/ib/**
          filters:
            - StripPrefix= 1  #去掉上面路径的第一个前缀,/api/book-->/book
        - id: transaction
          uri: lb://xl-transaction
          predicates:
            - Path=/api/trans/**
          filters:
            - StripPrefix= 1  # 去除路径前缀（如 /goods/** 转发到服务时会去掉 /goods 前缀）
      default-filters:  #给所有服务添加过滤器,优先级：default-filters>路由过滤器>gloalFilters
        - AddRequestHeader=default-filters,default-filters-added
    sentinel: # sentinel配置
      transport:
        dashboard: 192.168.224.128:8858
#        port: 8719
      eager: true
logging:
  config: classpath:com/xl/common/logback-spring.xml
  level:
    root: info
    org:
      springframework:
        cloud:
          gateway: DEBUG